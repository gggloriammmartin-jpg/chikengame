import 'package:audioplayers/audioplayers.dart';

class MusicService {
  static final MusicService _instance = MusicService._internal();
  factory MusicService() => _instance;

  final AudioPlayer player = AudioPlayer();

  MusicService._internal() {
    _init();
  }

  Future<void> _init() async {
    try {
      // –í –≤–µ—Ä—Å–∏–∏ 5.2.1 API –¥–ª—è –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è
      print('Music service initialized successfully');
    } catch (e) {
      print('Music service initialization failed: $e');
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    }
  }

  Future<void> play() async {
    try {
      await player.setReleaseMode(ReleaseMode.loop);
      await player.setVolume(0.8);
      await player.play(AssetSource('sounds/game_music_loop.mp3'));
      print("üîä Music started playing");
    } catch (e) {
      print("Failed to play music: $e");
      rethrow;
    }
  }

  Future<void> stop() async {
    try {
      await player.stop();
    } catch (e) {
      print("Failed to stop music: $e");
    }
  }

  Future<void> dispose() async {
    try {
      await player.stop(); 
      await player.dispose(); 
    } catch (e) {
      print("Failed to dispose music player: $e");
    }
  }
}
